;; Author: github.com/NeshHari

(deflisten workspace "scripts/workspaces.sh")
(defwidget workspaces []
    (literal :content workspace))

(deflisten classname "scripts/class_names.sh")
(defwidget classnames []
    (literal :content classname))

;;;;;;;;;;;;;;;;;;;;;;;; QUOTES ;;;;;;;;;;;;;;;;;;;;;;;;
(defpoll quote :interval "24h" "scripts/quotes --quote-and-quotee")

(defwidget quote []
    (box :class "quote-container" :orientation "v" :hexpand "false" :vexpand "true" :space-evenly "false"
        (button :style "background-image :url('images/quote.svg');" :class "quote-img" :halign "center") 
        (label :class "quote" :halign "center" :wrap "true" :limit-width 300 :text quote :xalign "0.5")))

(defwindow showquote
    :stacking "fg"
    :geometry (geometry :x "3%"
                        :y "46%"
                        :width "10%")
(quote))

;;;;;;;;;;;;;;;;;;;;;;;; CALENDAR ;;;;;;;;;;;;;;;;;;;;;;;;
(defpoll calendar_day :interval "10h" "date '+%d'")
(defpoll calendar_year :interval "10h" "date '+%Y'")
(defpoll calendar_date :interval "24h" "date '+%A, %d %B'")

(defwidget cal []
	(box :class "cal-container" 
	(box :class "cal-inner"
	(calendar :class "cal-inner-elems" 
			  :day calendar_day 
			  :year calendar_year))))

(defwidget fullcal[]
  (box :orientation "v" :space-evenly "false" :class "cal-outer-container"
    (box :class "cal-date" "${calendar_date}")
    (cal)
  )
)

(defwindow mycal
    :stacking "fg"
	:geometry (geometry :x "3%" 
						:y "70%" 
						:width "380px" 
						:height "20px")
(fullcal))

;;;;;;;;;;;;;;;;;;;;;;;; SPOTIFY ;;;;;;;;;;;;;;;;;;;;;;;;
(defpoll spotify :interval "1s" "scripts/spotify.py")
(defpoll playpause :interval "0.5s"  "scripts/playpause --icon")
(defpoll songtitle :interval "0.5s" "scripts/playpause --status")
(defpoll singer :interval "0.5s" "scripts/artist")
(defpoll album :interval "0.5s" "scripts/album")
(defpoll coverart :interval "0.5s" "scripts/coverart --art")

(defwidget spotify []
  (box :class "spotify-container" :orientation "h" :space-evenly "true" :halign "fill" :valign "center"
  :hexpand "false" :vexpand "true"
    (box :class "spotify-img" :style "background-image: url('${coverart}');")
    (box :class "spotify-inner-right-container" :orientation "v" :valign "center" :halign "center" :space-evenly "false" :spacing 0
      (box :orientation "v" :spacing 20
        (label :class "spotify-title" :text "${songtitle}" :limit-width "20")
        (label :class "spotify-singer" :text "~ ${singer} ~" :limit-width "18")
        (label :class "spotify-album" :text "${album}" :limit-width "18")
      )
      (box :class "spotify-controls" :orientation "h" :halign "fill" :space-evenly "true" :valign "center"
        (button :onclick "playerctl previous" "󰒮")
        (button :onclick "playerctl -p spotify play-pause" "${playpause}")
        (button :onclick "playerctl -p spotify next" "󰒭")
      )
    )
  )
)

(defwindow spotify
    :stacking "fg"
	:geometry (geometry :x "38%"
						:y "4%"
                        :width "24%")
(spotify))

(defwidget spotify_standalone []
    (button :class "btn-spotify" :onclick "scripts/customtoggle.sh spotify"
    (label :class "label-spotify" :text "${spotify}" :limit-width 35 :show-truncated true)))

(defwindow spotify_standalone
    :stacking "fg"
    :geometry (geometry :x "42.5%"
                        :y "0%"
                        :width "15%"
                        :height "3%")
    :reserve (struts :side "top" :distance "2.5%")
(spotify_standalone))

;;;;;;;;;;;;;;;;;;; POWER MENU ;;;;;;;;;;;;;;;;;;;
(defwidget poweroptions []
  (box :class "powermenu-container" :orientation "h" :space-evenly "true"
      (button :class "lock" :onclick "betterlockscreen -l dim" "")
      (button :class "logout" :onclick "pkill xmonad" "")
      (button :class "suspend" :onclick "systemctl suspend" "")
      (button :class "restart" :onclick "reboot" "")
      (button :class "shutdown" :onclick "shutdown -h now" "")))

(defwidget poweroptions_vertical []
  (box :class "powermenu-container-vertical" :orientation "v" :space-evenly "false" :spacing 10
      (button :class "lock" :onclick "betterlockscreen -l dim" "")
      (button :class "logout" :onclick "pkill xmonad" "")
      (button :class "suspend" :onclick "systemctl suspend" "")
      (button :class "restart" :onclick "reboot" "")
      (button :class "shutdown" :onclick "shutdown -h now" "")))

(defwindow powermenu
    :stacking "fg"
	:geometry (geometry :x "35%"
						:y "45%" 
						:width "30%"
                        :height "10%")
    (poweroptions))



(defpoll xmonad-layout :interval "1s" `scripts/xmonad_layout`)

(defwidget currentlayout []
	(box :class "xmonad-layout-container" :orientation "h"
		(label :halign "center" :limit-width 5 :text xmonad-layout)))


(defpoll wifi-signal :interval "10s" "nmcli -f IN-USE,SIGNAL,SSID device wifi | awk '/^\*/{if (NR!=1) {print $2}}'")

(defwidget showwifi []
  (box :class "metric"
       :orientation "h"
       :space-evenly "false"
       :active "false"
       :spacing 3
      (box "")
      (scale :min 0
             :max 100
             :active "false"
             :value {wifi-signal != "" ? wifi-signal : "0.0"})))

(defpoll ram :interval "3s" "printf $(free -m | grep Mem | awk '{print ($3/$2)*100}')")

(defwidget showmemory []
  (box :class "metric"
       :orientation "h"
       :space-evenly "false"
       :active "false"
       :spacing 4
      (box "")
      (scale :min 0
             :max 100
             :value ram
      )
  )
)           

(defpoll cpu :interval "3s" "top -b -n 1 | grep 'Cpu(s)' | awk '{print $2}'")

(defwidget showcpu []
  (box :class "metric"
       :orientation "h"
       :space-evenly "false"
       :active "false"
       :spacing 5
      (box "")
      (scale :min 0
             :max 100
             :value cpu
      )
  )
)           

(defwidget sysdata []
  (box :class "metric"
       :orientation "v"
       :space-evenly "false"
       :halign "center"
       :valign "center"
       (showwifi)
       (showcpu)
       (showmemory)
  )
)           

(defwindow showsysdata
    :stacking "fg"
	:geometry (geometry :x "3%"
                        :y "89%")
(sysdata))

(defpoll upd :interval "10m" "paru -Qu 2>/dev/null | wc -l")

(defwidget applications []
    (box :orientation "v" :space-evenly "false" :class "app-container"
      (button :tooltip "Launch Brave" :style "background-image :url('images/brave.svg');" :onclick "scripts/applauncher.sh --brave")
      (button :tooltip "Launch Terminal" :style "background-image :url('images/kitty.svg');" :onclick "scripts/applauncher.sh --kitty")
      (button :tooltip "Launch Thunar" :style "background-image :url('images/files.svg');" :onclick "scripts/applauncher.sh --files")
      (button :tooltip "Launch Spotify" :style "background-image :url('images/spotify.svg');" :onclick "scripts/spotify_launch.sh &")
      (button :tooltip "Launch Discord" :style "background-image :url('images/discord.svg');" :onclick "scripts/applauncher.sh --discord")
      (button :tooltip "Launch GitHub" :style "background-image :url('images/git.svg');" :class "git" :onclick "scripts/applauncher.sh --git")))


(defpoll btdevice :interval "10s" `scripts/checkbluetoothdevice.sh`)
(defpoll unreadmail :interval "10m" `$HOME/Mail/mail`)
;; uncomment this and comment the above to fill in your mail credentials 
;; (defpoll unreadmail :interval "10m" `scripts/mail.py`)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;; BAR ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; applications
(defvar app_rev false)

; notifications
(defvar noti_rev false)

;volume
(defpoll vol_cur :interval "1s" "amixer -D pulse sget Master | grep 'Left:' | awk -F'[][]' '{ print $2 }' | tr -d '%' | head -1")
(defvar vol_rev false)

;update
(defvar upd_rev false)

;mail
(defvar mail_rev false)

;bluetooth
(defvar bt_rev false)

;time
(defpoll hour :interval "3600s" "date '+%H'")
(defpoll min :interval "60s" "date '+%M'")

;sysdata
(defvar sys_rev false)

;power
(defvar power_rev false)

(defwidget bar []
  (box :orientation "v" :space-evenly "true" :class "bar" :valign "fill" :vexpand "false" :hexpand "false" :halign "center"
    (box :orientation "v" :space-evenly "false" :class "top-of-bar" :spacing 15 :valign "start"
      (button :active "false" :class "btn-xmonad" "" )
      (workspaces)
      (button :class "btn-layout" 
         (label :class "label-layout" :limit-width 5 :text xmonad-layout))
      (classnames))
    (box :orientation "v" :space-evenly "false" :class "middle-of-bar" :spacing 15 :valign "center"
      (eventbox :onhover "eww update app_rev=true"
                :onhoverlost "eww update app_rev=false"
            (box :space-evenly "false" :orientation "v" :halign "center"
            (revealer :transition "slidedown"
                 :reveal app_rev
                 :duration "500ms"
            (applications))
          (button :class "btn-launcher" :active false "")))
      (button :class "btn-search" :onclick "scripts/search.sh &" "" )
      (eventbox :onhover "eww open --toggle showquote"
                :onhoverlost "eww open --toggle showquote"
            (box :space-evenly "false" :orientation "v" :halign "center"
            (button :class "btn-quote" ""))) 
      (button :class "btn-notifications" :onclick "eww open --toggle notifications" "" ))
    (box :orientation "v" :space-evenly "false" :class "bottom-of-bar" :spacing 15 :valign "end" :vexpand "false" :hexpand "false"
      (eventbox :onhover "eww update upd_rev=true"
                :onhoverlost "eww update upd_rev=false"
            (box :space-evenly "false" :orientation "h" :spacing 2 :halign "center"
            (revealer :transition "slideleft"
                 :reveal upd_rev
                 :duration "500ms"
            (label :class "label-update" :text "${upd}"))
          (button :class "btn-update" :onclick "scripts/update.sh &" :tooltip "${upd} updates available"
            (label :text ""))))
      (eventbox :onhover "eww update mail_rev=true"
                :onhoverlost "eww update mail_rev=false"
            (box :space-evenly "false" :orientation "h" :spacing 2 :halign "center"
            (revealer :transition "slideleft"
                 :reveal mail_rev
                 :duration "500ms"
            (label :class "label-mail" :text "${unreadmail}"))
          (button :class "btn-mail" :onclick "thunderbird &" :tooltip "${unreadmail} unread mails"
            (label :halign "center" :text ""))))
      (eventbox :onhover "eww update bt_rev=true"
                :onhoverlost "eww update bt_rev=false"
            (box :space-evenly "false" :orientation "v" :spacing 2
            (revealer :transition "slideup"
                 :reveal bt_rev
                 :duration "500ms"
            (label :halign "center" :valign "center" :class "label-bluetooth" :text "${btdevice}" :show-truncated false :angle 90))
            (button :class "btn-bluetooth" :onclick "scripts/bluetooth.sh" :tooltip "${btdevice}"
              (label :halign "center" :class "label-bluetooth" :text "")
            )))
      (eventbox :onhover "eww update vol_rev=true"
                :onhoverlost "eww update vol_rev=false"
          (box :space-evenly "false" :orientation "v" :spacing 2  :class "volume"
          (revealer :transition "slideup"
               :reveal vol_rev
               :duration "500ms"
          (scale :class "volbar"
               :value vol_cur
               :orientation "v"
               :flipped "true"
               :tooltip "${vol_cur}%"
               :max 100
               :min 0
               :onchange "amixer -D pulse sset Master {}%" ))
          (button :class "btn-volume" :onclick "amixer -D pulse set Master 1+ toggle" "")))
      (eventbox :onhover "eww update sys_rev=true"
                :onhoverlost "eww update sys_rev=false"
          (box :space-evenly "false" :orientation "v" :spacing 2
          (revealer :transition "slideup"
               :reveal sys_rev
               :duration "500ms"
          (sysdata))
      (button :class "btn-sysdata" :onclick "scripts/customtoggle.sh showsysdata" "" )))
      (box	:orientation "v" :class "btn-time" 
            (button	:onclick "scripts/customtoggle.sh mycal" :class "btn-time-hour" hour)
            (button	:onclick "scripts/customtoggle.sh mycal" :class "btn-time-min" min))
      (eventbox :onhover "eww update power_rev=true"
                :onhoverlost "eww update power_rev=false"
          (box :space-evenly "false" :orientation "v" :spacing 2
          (revealer :transition "slideup"
               :reveal power_rev
               :duration "500ms"
          (poweroptions_vertical))
      (button :class "btn-power" :onclick "scripts/customtoggle.sh powermenu" ""))))))

(defwindow bar
	:geometry (geometry :x "0.3%"
                        :y "1.2%"
                        :height "97.6%")
    :reserve (struts :side "left" :distance "1.3%")
(bar))

;;;;;;;;;;;;;;;;;;;;;;;;;;;; NOTIFICAITONS ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; custom rewrite of github.com/syndrizzle/hotfiles
(defpoll notifications_stats :interval "5s" "scripts/logger.py stats")
(deflisten notications_scroll_pane "scripts/logger.py subscribe")

(defwidget notifications_layout []
  (box :orientation "v" :space-evenly "false" :class "notifications-container"
    (box :class "notifications-header-container" :space-evenly "true" :orientation "v"
      (label :text "~ NOTIFICATIONS ~" :class "notifications-header" :hexpand true :halign "center"))
    (scroll :hscroll false :vscroll true :vexpand "true" :hexpand "true" :class "notifications-scroll"
      (literal :content notications_scroll_pane))
      (box :class "notifications-footer" :space-evenly "true" :orientation "h"
        (button :onclick "scripts/clearall.sh" :class "notifications-clear-container" "CLEAR ALL")
        (button :onclick "eww close notifications" :class "notifications-close-container" "CLOSE"))))

(defwidget cardimage [summary body ?limit_summary ?limit_body appname icon icon_width icon_height close ?close_action image image_width image_height timestamp urgency]
  (eventbox :class "notifications-cards"
    (box :orientation "v" :space-evenly false :class "notifications-cards-outer"
      (box :class "notifications-cards-header" :space-evenly false :hexpand true :valign "center" :vexpand false
        (label :text appname :hexpand true :halign "center" :class "notifications-card-appname")
        (button :class "btn-card-close" :onclick close_action :timeout "1s" ""))
      (box :space-evenly false :halign "fill"
        (box :hexpand true :vexpand true :valign "fill" :orientation "v" :spacing 0 :class "notifications-card-body" :space-evenly false
          (label :text summary :limit-width "${limit_summary != "" ? limit_summary : 30}" :halign "fill" :class "summary-header" :show-truncated "true" :wrap "true")
      (box :space-evenly true :halign "fill" :class "notifications-card-body-content" :valign "center"
          (label :text body :limit-width "${limit_body != "" ? limit_body : 50}" :wrap true :halign "center" :class "notifications-body-text")
        (box :class "notifications-card-image-container" :halign "end"
         (box :style "background-image: url('${image}')" :hexpand true :vexpand true :width image_width :height image_height :class "notifications-card-image")))
          (label :text "@${timestamp}" :halign "center" :class "notifications-card-timestamp"))))))

(defwindow notifications :stacking "fg" 
  :stacking "fg"
  :wm-ignore true
  :geometry (geometry :x "3%" :width "18%" :height "50%" :anchor "left center")
  (notifications_layout))

